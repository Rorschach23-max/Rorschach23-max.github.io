<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Git</title>
      <link href="/2024/04/07/Git/"/>
      <url>/2024/04/07/Git/</url>
      
        <content type="html"><![CDATA[<h3 id="对于Git一些操作-通过各种区来理解"><a href="#对于Git一些操作-通过各种区来理解" class="headerlink" title="对于Git一些操作 通过各种区来理解"></a>对于Git一些操作 通过各种区来理解</h3><p>![本地图片](..&#x2F;img&#x2F;md&#x2F;Git&#x2F;git zone.png)</p><h4 id="Workspace：工作区"><a href="#Workspace：工作区" class="headerlink" title="Workspace：工作区"></a>Workspace：工作区</h4><p>本地电脑上的东西都在这个区</p><p><strong>从远程仓库克隆到本地</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/username/repository.git</span><br></pre></td></tr></table></figure><p><strong>从远程仓库克隆特定分支到本地</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b branch-name https://github.com/username/repository.git</span><br></pre></td></tr></table></figure><p><strong>远程仓库有多个分支时</strong>，<strong>切换到想要更新的分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout branch-name</span><br></pre></td></tr></table></figure><p>（获取fetch 然后 合并merge ） 或者 pull抓取 等同这两个操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git fetch origin</span><br><span class="line">git merge origin/branch-name</span><br><span class="line"></span><br><span class="line">git pull origin branch-name</span><br></pre></td></tr></table></figure><h4 id="Index-Stage：暂存区"><a href="#Index-Stage：暂存区" class="headerlink" title="Index &#x2F; Stage：暂存区"></a>Index &#x2F; Stage：暂存区</h4><p>要提交 首先得把工作区的更改放到暂存区</p><p><strong>提交某个文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add filename.txt</span><br></pre></td></tr></table></figure><p>**提交全部文件 **</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><h4 id><a href="#" class="headerlink" title></a></h4><p>Repository：仓库区（或本地仓库）</p><p>要把<strong>暂存区的变更提交到仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;提交的注释&quot;</span></span><br></pre></td></tr></table></figure><h4 id="-1"><a href="#-1" class="headerlink" title></a></h4><p>Remote：远程仓库</p><p><strong>推送到master分支</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong>推送本地分支到远程仓库</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin feature-branch</span><br></pre></td></tr></table></figure><p><strong>设置推送的新分支为上游分支，之后每次提交只需用 git push</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin feature-branch</span><br></pre></td></tr></table></figure><p><strong>合并dev分支到master分支</strong> <strong>然后上传</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout master</span><br><span class="line">git merge dev</span><br><span class="line">git push master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/04/07/hello-world/"/>
      <url>/2024/04/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法相关</title>
      <link href="/2023/07/25/%E7%AE%97%E6%B3%95%E7%9B%B8%E5%85%B3/"/>
      <url>/2023/07/25/%E7%AE%97%E6%B3%95%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="一些零碎小知识点"><a href="#一些零碎小知识点" class="headerlink" title="一些零碎小知识点"></a>一些零碎小知识点</h2><h3 id="常用头文件"><a href="#常用头文件" class="headerlink" title="常用头文件"></a>常用头文件</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span> <span class="comment">//万能头文件</span></span></span><br></pre></td></tr></table></figure><h3 id="动态数组"><a href="#动态数组" class="headerlink" title="动态数组"></a>动态数组</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">a</span><span class="params">(n)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="输入输出"><a href="#输入输出" class="headerlink" title="输入输出"></a>输入输出</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cin&gt;&gt;n <span class="comment">//输入n</span></span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;endl <span class="comment">//输出a[i]并换行</span></span><br><span class="line">cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot;\n&quot;</span> <span class="comment">//输出a[i]并换行</span></span><br></pre></td></tr></table></figure><h3 id="指针定义二维数组"><a href="#指针定义二维数组" class="headerlink" title="指针定义二维数组"></a>指针定义二维数组</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">a = (<span class="type">int</span> **)<span class="built_in">calloc</span>(n,<span class="built_in">sizeof</span>(<span class="type">int</span> *)); <span class="comment">//或(int **)malloc(n*sizeof(int *));</span></span><br><span class="line"><span class="comment">//calloc 会初始化为0 malloc不会</span></span><br><span class="line"><span class="comment">//（int **）强制类型转换 指向int型变量指针的指针</span></span><br><span class="line"><span class="comment">//sizeof(int *) int型指针占的字节数</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    a[i]=(<span class="type">int</span> *)<span class="built_in">calloc</span>(n,<span class="built_in">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">&#125; <span class="comment">//定义n个int型变量指针</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">    <span class="built_in">free</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//释放内存</span></span><br></pre></td></tr></table></figure><h3 id="输入到文件末尾"><a href="#输入到文件末尾" class="headerlink" title="输入到文件末尾"></a>输入到文件末尾</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a)!=EOF)</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;a)</span><br><span class="line"><span class="comment">//输入时 换行ctrl+z结束输入</span></span><br></pre></td></tr></table></figure><h3 id="ASCII表"><a href="#ASCII表" class="headerlink" title="ASCII表"></a>ASCII表</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">大写字母 A-Z 对应的 ASCII 码是 65-90</span><br><span class="line">小写字母 a-z 对应的 ASCII 码是 97-122</span><br></pre></td></tr></table></figure><h3 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x27;\0&#x27; 空字符</span><br><span class="line">scanf输入到空格即停止</span><br><span class="line">gets会输入空格 输入到换行符停止（换行符也会被读入）</span><br><span class="line">gets会把空格当&#x27; &#x27;保存 而scanf会把他当&#x27;\0&#x27;</span><br><span class="line">sscanf ssprintf memset strlen</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//sscanf和sprintf函数</span></span><br><span class="line"><span class="built_in">sscanf</span>(s,<span class="string">&quot;%d&quot;</span>,&amp;c); <span class="comment">//字符串s -&gt; 整数c</span></span><br><span class="line"><span class="built_in">sprintf</span>(s,<span class="string">&quot;%d&quot;</span>,&amp;c); <span class="comment">//整数c -&gt; 字符串s</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//memset</span></span><br><span class="line"><span class="built_in">memset</span>(s,<span class="number">0</span>,<span class="built_in">sizeof</span>(s));</span><br><span class="line"></span><br><span class="line"><span class="comment">//strlen s.length求字符串长度函数</span></span><br><span class="line"><span class="comment">//strlen要计算长度的字符串，直到以空字符\0结尾的字符</span></span><br><span class="line"><span class="comment">//s.length计算长度的字符串,可以计算空格</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//getline整行输入 会计入空格符 但是cin&gt;&gt;s不会</span></span><br><span class="line">string s;</span><br><span class="line"><span class="built_in">getline</span>(cin,s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//a串+b串</span></span><br><span class="line"><span class="comment">//1 string</span></span><br><span class="line">string s,s1;</span><br><span class="line">s+=s1;</span><br><span class="line"><span class="comment">//2 字符数组</span></span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>],s1[<span class="number">100</span>]</span><br><span class="line"><span class="built_in">strcat</span>(s,s1); <span class="comment">//等于上面的s+=s1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//s串复制到s1串</span></span><br><span class="line"><span class="comment">//1 string</span></span><br><span class="line">string s,s1;</span><br><span class="line">s=s1;</span><br><span class="line"><span class="comment">//2 字符数组</span></span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>],s1[<span class="number">100</span>]</span><br><span class="line"><span class="built_in">strcpy</span>(s1,s);</span><br><span class="line"></span><br><span class="line"><span class="comment">//子串 </span></span><br><span class="line"><span class="comment">//string</span></span><br><span class="line">string s；</span><br><span class="line">s.<span class="built_in">substr</span>(a,b); <span class="comment">//从位置a起 b个字符</span></span><br><span class="line">s.<span class="built_in">substr</span>(a); <span class="comment">//从位置a起至字符串末尾</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//s找子串s1位置</span></span><br><span class="line"><span class="comment">//1 string</span></span><br><span class="line">string s,s1;</span><br><span class="line">s.<span class="built_in">find</span>(s1) <span class="comment">//若找到返回位置 若没找到返回一个很怪的值</span></span><br><span class="line">s.<span class="built_in">find</span>(s1,a) <span class="comment">//从s的a位置找s1</span></span><br><span class="line"><span class="keyword">if</span>(s.<span class="built_in">find</span>(s1)==string::npos) <span class="comment">//没找到的判定条件</span></span><br><span class="line"><span class="comment">//2 字符数组 </span></span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>],s1[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">strstr</span>(s,s1) <span class="comment">//若找到返回位置 没找到返回NULL</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//s中插入s1,在第a个字符串前</span></span><br><span class="line"><span class="comment">//string</span></span><br><span class="line">string s,s1;</span><br><span class="line">s.<span class="built_in">insert</span> (a,s1);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将字符串中小写字母变大写 大写变小写</span></span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;s.length;i++)&#123;</span><br><span class="line">    s[i]=<span class="built_in">toupper</span>(s[i]) <span class="comment">//或 s[i]=tolower(s[i])</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计字串出现次数</span></span><br><span class="line"><span class="type">int</span> <span class="built_in">cs</span>(string s)&#123;</span><br><span class="line">    string s1=<span class="string">&quot;VK&quot;</span>;</span><br><span class="line">    <span class="type">int</span> c=<span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> b=s.<span class="built_in">find</span>(s1);</span><br><span class="line">    <span class="keyword">while</span>(s.<span class="built_in">find</span>(s1,b)!=string::npos)&#123;</span><br><span class="line">        c++;</span><br><span class="line">        b=s.<span class="built_in">find</span>(s1,b+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//strcmp 字符串比较函数 返回一个int</span></span><br><span class="line"><span class="built_in">strcmp</span>(str1,str2) </span><br><span class="line"><span class="comment">// 如果str1与str2相等，则返回值为0。</span></span><br><span class="line"><span class="comment">// 如果str1长度小于str2，则返回值小于0。</span></span><br><span class="line"><span class="comment">// 如果str1长度大于str2，则返回值大于0。</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcpy</span>(str1,str2)</span><br><span class="line"><span class="comment">//把str2的内容赋值到str1里</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">strcat</span>(str1,str2)</span><br><span class="line"><span class="comment">//把str2内容贴到str1末尾</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">to_string</span>(<span class="type">int</span> a)</span><br><span class="line"><span class="comment">//把整数a变成string型</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="质数判断"><a href="#质数判断" class="headerlink" title="质数判断"></a>质数判断</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//大于1且只能被1和自身整除的数</span></span><br><span class="line"><span class="comment">//0 1  不是质数</span></span><br><span class="line"><span class="comment">//2 是质数</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">prime</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>||n==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="switch语句举例"><a href="#switch语句举例" class="headerlink" title="switch语句举例"></a>switch语句举例</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> (month) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;冬季\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;春季\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="最大公因数"><a href="#最大公因数" class="headerlink" title="最大公因数"></a>最大公因数</h3><p>欧几里得算法，两个数相除，将余数作为新除数，直到除尽为止</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归写法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(b==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//不用递归</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(b!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="type">int</span> temp=b;</span><br><span class="line">        b=a%b;</span><br><span class="line">        a=temp;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="斐波那契"><a href="#斐波那契" class="headerlink" title="斐波那契"></a>斐波那契</h3><p>第1项 0 第2项 1 ，之后的每项都为前两项之和</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//递归写法</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">f</span>(n<span class="number">-1</span>)+<span class="built_in">f</span>(n<span class="number">-2</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//不用递归</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="type">int</span> a=<span class="number">0</span>,b=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="type">int</span> t=a+b;</span><br><span class="line">            a=b;</span><br><span class="line">            b=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="闰年"><a href="#闰年" class="headerlink" title="闰年"></a>闰年</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//能被4整除但不能被100整除 但能被400整除也是闰年</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h3 id="高精度"><a href="#高精度" class="headerlink" title="高精度"></a>高精度</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">string <span class="title">multiply</span><span class="params">(string num1,<span class="type">int</span> num2)</span></span>&#123; <span class="comment">//字符串表示高精度</span></span><br><span class="line">    string result = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> carry=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=num1.<span class="built_in">length</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123; <span class="comment">//字符串与一般数组的高低位是反着的</span></span><br><span class="line">        <span class="type">int</span> product=(num1[i]-<span class="string">&#x27;0&#x27;</span>)*num2+carry;</span><br><span class="line">        result=<span class="built_in">to_string</span>(product%<span class="number">10</span>)+result;</span><br><span class="line">        carry=product/<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(carry&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        result=<span class="built_in">to_string</span>(carry%<span class="number">10</span>)+result;</span><br><span class="line">        carry/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125; 字符串高精度乘法</span><br><span class="line"><span class="built_in">sort</span>(a+<span class="number">1</span>,a+n+<span class="number">1</span>); 排a[<span class="number">1</span>]到a[n]</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">### 汉诺塔</span><br><span class="line">```c++</span><br><span class="line">//递归写法</span><br><span class="line">void digui(int n,char a,char b,char c)&#123; //n个盘移动从a移动到c，通过b</span><br><span class="line">    if(n==1) &#123;</span><br><span class="line">        cout&lt;&lt;a&lt;&lt;&quot;--&gt;&quot;&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">        digui(n-1,a,c,b);//n-1个盘移动从a移动到b，通过c</span><br><span class="line">        cout&lt;&lt;a&lt;&lt;&quot;--&gt;&quot;&lt;&lt;c&lt;&lt;endl;</span><br><span class="line">        digui(n-1,b,a,c);//n-1个盘移动从b移动到c，通过a</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">//迭代写法 用栈</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="整数划分（不是很懂）"><a href="#整数划分（不是很懂）" class="headerlink" title="整数划分（不是很懂）"></a>整数划分（不是很懂）</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">digui</span><span class="params">(<span class="type">int</span> n,<span class="type">int</span> m)</span></span>&#123; <span class="comment">//n为待划分的数 m为最大划分数</span></span><br><span class="line">    <span class="keyword">if</span>(n==<span class="number">0</span>||m==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//n==0时return1 因为n=0时已经在计算有一个m的情况了</span></span><br><span class="line">    <span class="keyword">if</span>(n&gt;=m)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">digui</span>(n,m<span class="number">-1</span>)+<span class="built_in">digui</span>(n-m,m);</span><br><span class="line">        <span class="comment">//digui(n,m-1)是指 划分数中不包含m的情况</span></span><br><span class="line">        <span class="comment">//digui（n-m，m）是指划分数中已经有一个m 在计算其他情况</span></span><br><span class="line">        <span class="comment">//两者相加即为所得</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">digui</span>(n,n);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">digui</span>(n,n)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><pre><code>auto current = circle.begin()vector.begin()vector.end()push_back(value)：将元素添加到vector的末尾。pop_back()：移除vector的最后一个元素。size()：返回vector中元素的个数。empty()：检查vector是否为空，如果为空返回true，否则返回false。clear()：清空vector中的所有元素。resize(newSize)：改变vector的大小，使其包含指定数量的元素。front()：返回vector的第一个元素。back()：返回vector的最后一个元素。at(index)：返回指定索引处的元素。begin() 和 end()：返回指向vector首元素和尾后元素的迭代器，用于遍历vector中的元素。insert(iterator, value)：在指定位置之前插入元素。erase(iterator)：移除指定位置的元素。swap(vector2)：交换两个vector容器的元素。大整数乘法 </code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> c </tag>
            
            <tag> c++ </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>markdown相关</title>
      <link href="/2023/07/24/markdown%E7%9B%B8%E5%85%B3/"/>
      <url>/2023/07/24/markdown%E7%9B%B8%E5%85%B3/</url>
      
        <content type="html"><![CDATA[<h2 id="多个标签用法"><a href="#多个标签用法" class="headerlink" title="多个标签用法"></a>多个标签用法</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line"><span class="bullet">  -</span> hexo   </span><br><span class="line"><span class="bullet">  -</span> gitee</span><br><span class="line"><span class="bullet">  -</span> 命令行</span><br><span class="line">  &lt;!-- -加空格  --&gt;</span><br></pre></td></tr></table></figure><h2 id="Markdown文档通常应该怎么写"><a href="#Markdown文档通常应该怎么写" class="headerlink" title="Markdown文档通常应该怎么写"></a>Markdown文档通常应该怎么写</h2><h3 id="使用标题："><a href="#使用标题：" class="headerlink" title="使用标题："></a>使用标题：</h3><p>使用井号（#）开头创建标题。使用多个井号表示不同级别的标题。例如：</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 标题1</span><br><span class="line">## 标题2</span><br><span class="line">### 标题3</span><br></pre></td></tr></table></figure><h3 id="强调内容："><a href="#强调内容：" class="headerlink" title="强调内容："></a>强调内容：</h3><p>使用星号（*）或下划线（_）对内容进行强调。单个星号或下划线是斜体，两个是粗体，三个是粗斜体。例如：</p>   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体*</span></span><br><span class="line"><span class="strong">**粗体**</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体*</span>**</span></span><br></pre></td></tr></table></figure><h3 id="列表："><a href="#列表：" class="headerlink" title="列表："></a>列表：</h3><p>使用短横线（-）或数字加点创建无序或有序列表。例如：</p>   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> 无序列表项1</span><br><span class="line"><span class="bullet">-</span> 无序列表项2</span><br><span class="line"></span><br><span class="line"><span class="bullet">1.</span> 有序列表项1</span><br><span class="line"><span class="bullet">2.</span> 有序列表项2</span><br></pre></td></tr></table></figure><h3 id="链接和图片："><a href="#链接和图片：" class="headerlink" title="链接和图片："></a>链接和图片：</h3><p>使用中括号（[]）输入链接文本，并使用小括号（()）输入链接地址。例如：</p>   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">链接文本</span>](<span class="link">链接地址</span>)</span><br><span class="line">![<span class="string">图片描述</span>](<span class="link">图片链接地址</span>)</span><br></pre></td></tr></table></figure><h3 id="引用块："><a href="#引用块：" class="headerlink" title="引用块："></a>引用块：</h3><p>使用大于号（&gt;）创建引用块。例如：</p>   <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 这是引用的内容。</span></span><br></pre></td></tr></table></figure><h3 id="代码块："><a href="#代码块：" class="headerlink" title="代码块："></a>代码块：</h3><p>使用三个反引号（&#96;&#96;&#96;)创建代码块，并指定代码语言。例如：</p>   <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello, world!&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="分割线："><a href="#分割线：" class="headerlink" title="分割线："></a>分割线：</h3><p>使用三个或更多的连字符（-）或星号（*）创建分割线。例如：</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><h3 id="表格："><a href="#表格：" class="headerlink" title="表格："></a>表格：</h3><p>使用垂直竖线（|）和连字符（-）创建简单的表格。例如：</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">| 列1 | 列2 |</span><br><span class="line">|-----|-----|</span><br><span class="line">| 内容1 | 内容2 |</span><br></pre></td></tr></table></figure><h3 id="注释："><a href="#注释：" class="headerlink" title="注释："></a>注释：</h3><p>使用HTML注释语法添加注释<br>    <figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 注释 --&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My_First_Blog</title>
      <link href="/2023/07/22/My-First-Blog/"/>
      <url>/2023/07/22/My-First-Blog/</url>
      
        <content type="html"><![CDATA[<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h3 id="hexo常用操作"><a href="#hexo常用操作" class="headerlink" title="hexo常用操作"></a>hexo常用操作</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="built_in">test</span> <span class="comment">#新建一个test文档</span></span><br><span class="line">$ hexo s -p 8080 <span class="comment">#启动服务 本地看 8080端口、</span></span><br><span class="line">$ hexo clean          <span class="comment"># 清除所有记录</span></span><br><span class="line">$ hexo generate       <span class="comment"># 生成静态网页 hexo g</span></span><br><span class="line">$ hexo deplore <span class="comment">#部署 hexo d</span></span><br></pre></td></tr></table></figure><h3 id="相对路径写法"><a href="#相对路径写法" class="headerlink" title="相对路径写法"></a>相对路径写法</h3><p><strong>.&#x2F;</strong> 用于相对于当前文件夹<br><strong>…&#x2F;</strong> 用于相对于当前文件夹的上一级文件夹</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> gitee </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
